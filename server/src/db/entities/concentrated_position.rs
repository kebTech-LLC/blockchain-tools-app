//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.1

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "concentrated_position")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub address: String,
    pub wallet_address: String,
    pub pool_address: String,
    pub pool_type: String,
    pub token_mint_a: String,
    pub token_mint_b: String,
    pub token_a_decimals: i32,
    pub token_b_decimals: i32,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))")]
    pub start_price_token_a_per_b: Decimal,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))")]
    pub start_price_token_b_per_a: Decimal,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))")]
    pub start_price_sqrt: Decimal,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))", nullable)]
    pub end_price_token_a_per_b: Option<Decimal>,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))", nullable)]
    pub end_price_token_b_per_a: Option<Decimal>,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))", nullable)]
    pub end_price_sqrt: Option<Decimal>,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))")]
    pub start_balance_token_a: Decimal,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))")]
    pub start_balance_token_b: Decimal,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))", nullable)]
    pub end_balance_token_a: Option<Decimal>,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))", nullable)]
    pub end_balance_token_b: Option<Decimal>,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))")]
    pub liquidity: Decimal,
    pub tick_lower_index: i32,
    pub tick_upper_index: i32,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))")]
    pub range_lower: Decimal,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))")]
    pub range_upper: Decimal,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))", nullable)]
    pub fees_earned_token_a: Option<Decimal>,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))", nullable)]
    pub fees_earned_token_b: Option<Decimal>,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))", nullable)]
    pub fees_paid_open_sol: Option<Decimal>,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))", nullable)]
    pub fees_paid_open_usd: Option<Decimal>,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))", nullable)]
    pub fees_paid_close_sol: Option<Decimal>,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))", nullable)]
    pub fees_paid_close_usd: Option<Decimal>,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))", nullable)]
    pub sol_costs_start: Option<Decimal>,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))", nullable)]
    pub sol_costs_end: Option<Decimal>,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))", nullable)]
    pub rewards_amount: Option<Decimal>,
    pub rewards_mint: Option<String>,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))")]
    pub rent_exempt_paid_sol: Decimal,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))", nullable)]
    pub rent_exempt_refunded_sol: Option<Decimal>,
    pub opened_at: DateTime,
    pub closed_at: Option<DateTime>,
    pub position_mint: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
