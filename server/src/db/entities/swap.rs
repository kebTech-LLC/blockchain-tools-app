//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.1

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "swap")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub signature: String,
    pub swap_position_closed: Option<String>,
    pub swap_position_opened: Option<String>,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))")]
    pub token_a_amount: Decimal,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))")]
    pub token_b_amount: Decimal,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))")]
    pub swap_price: Decimal,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))")]
    pub swap_fees_usd: Decimal,
    #[sea_orm(column_type = "Decimal(Some((18, 8)))")]
    pub transaction_fees_usd: Decimal,
    pub swapped_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
